name: Publish f-flow on Release

on:
  push:
    branches:
      - release/**

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Extract version from branch name
        id: version
        run: |
          VERSION="${GITHUB_REF##refs/heads/release/}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set version in package.json if needed
        id: maybe-update-version
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          CURRENT=$(jq -r .version projects/f-flow/package.json)
          echo "Current version: $CURRENT"
          echo "Target version: $VERSION"

          if [ "$VERSION" = "$CURRENT" ]; then
            echo "Version already set to $VERSION, skipping update."
            echo "UPDATED=false" >> $GITHUB_OUTPUT
          else
            echo "Updating version to $VERSION"
            jq --arg v "$VERSION" '.version = $v' projects/f-flow/package.json > tmp.$$.json
            mv tmp.$$.json projects/f-flow/package.json
            echo "UPDATED=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push version update
        if: steps.maybe-update-version.outputs.UPDATED == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add projects/f-flow/package.json
          git commit -m "chore(f-flow): set version ${{ steps.version.outputs.VERSION }}"
          git push origin HEAD:${GITHUB_REF##refs/heads/}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up .npmrc for publishing
        run: echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build & Publish library
        run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push git tag
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          git tag v$VERSION
          git push origin v$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
